on:
  push:

defaults:
  run:
    shell: bash

jobs:
  create-release:
    name: Create Release with Installers
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  create-installers:
    name: Create Platform Targeted Executors
    needs: create-release
    runs-on: ${{ matrix.os }}
    env:
      BUILD_PATH: actf-demo/build/jpackage/
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            file: '*.msi'
            wrapper: 'gradlew.bat'
          - os: macos-latest
            file: '*.dmg'
            wrapper: 'gradlew'
          - os: ubuntu-latest
            file: '*.deb'
            wrapper: 'gradlew'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: '14.0.2'
          java-package: jdk
          architecture: x64
      - name: Build application w Gradle
        run: |
          chmod +w ./${{ matrix.wrapper }}
          ./${{ matrix.wrapper }} build
      - name: Build Installer
        id: build-installer
        run: |
          ./${{ matrix.wrapper }} jpackage
          echo ::set-output name=FILE_NAME::$(find ${{ env.BUILD_PATH }} -maxdepth 1 -name ${{ matrix.file }} -exec basename {} \;)
      - name: Upload Installer
        id: upload-installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.url }}
          asset_path: ${{ env.BUILD_PATH }}${{ steps.build-installer.outputs.FILE_NAME }}
          asset_name: ${{ steps.build-installer.outputs.FILE_NAME }}
          asset_content_type: application/zip
  maven-upload:
    name: Upload to Bintray Maven Repo
    needs: create-installers
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: '14.0.2'
          java-package: jdk
          architecture: x64
      - name: Build Project with Gradle
        run: |
          chmod 775 ./gradlew
      - name: Build Installer
        env:
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          BINTRAY_KEY: ${{ secrets.BITNRAY_KEY }}
        run: |
          ./gradlew bintrayUpload
  delete-failed-release:
    name: Delete Release on Build Failure
    runs-on: ubuntu-latest
    needs: maven-upload
    if: always() && !success()
    steps:
      - name: Delete Tag and Release
        uses: dev-drprasad/delete-tag-and-release@v0.1.2
        with:
          delete_release: true
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
