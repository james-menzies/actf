on:
  push:

defaults:
  run:
    shell: bash

jobs:
  create-installers:
    name: Create Platform Targeted Executors
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            file: '*.msi'
            wrapper: 'gradlew.bat'
          - os: macos-latest
            file: '*.dmg'
            wrapper: 'gradlew'
          - os: ubuntu-latest
            file: '*.deb'
            wrapper: 'gradlew'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: '14.0.2'
          java-package: jdk
          architecture: x64
      - name: Build application w Gradle
        run: |
          chmod +w ./${{ matrix.wrapper }}
          ./${{ matrix.wrapper }} build
      - name: Install Wix Tools
        if: matrix.os == 'windows.latest'
        run: |
          choco install wixtoolset -y
      - name: Build Installer
        run: |
          ./${{ matrix.wrapper }} jpackage
      - name: Upload Installer
        uses: actions/upload-artifact@v2
        with:
          path: Demo/build/jpackage/${{ matrix.file }}
  create-release:
    name: Create Release with Installers
    runs-on: ubuntu-latest
    needs: create-installers
    outputs:
      url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
  upload-installers:
    name: Upload Instrallers
    needs: create-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        filename: [windows-installer, ubuntu-deb-file]
    steps:
      - name: Download uploaded artifact
        uses: actions/download-artifact@v2
      - name: Zip artifact
        run : |
          zip -r ${{ matrix.filename }}.zip ${{ matrix.filename }}/*
      - name: Upload to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.url }}
          asset_path: ./${{ matrix.filename }}.zip
          asset_name: ${{ matrix.filename }}.zip
          asset_content_type: application/zip
  maven-upload:
    name: Upload to Bintray Maven Repo
    needs: upload-installers
    runs-on: ubuntu latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: '14.0.2'
          java-package: jdk
          architecture: x64
      - name: Build Project with Gradle
        run: |
          chmod 775 ./gradlew
          ./gradlew build
      - name: Build Installer
        run: |
          ./gradlew bintrayPublish
  delete-failed-release:
    name: Delete Release on Build Failure
    runs-on: ubuntu-latest
    needs: upload-installers
    if: failure()
    steps:
      - name: Delete Tag and Release
        uses: dev-drprasad/delete-tag-and-release@v0.1.2
        with:
          delete_release: true
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
