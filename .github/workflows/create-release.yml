on:
  push:
    tags:
      - 'v*'


jobs:
  create-windows-installer:
    name: Create Windows Installer
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: '14.0.2'
          java-package: jdk
          architecture: x64
      - name: Build application w Gradle
        run: |
          cmd.exe /c 'gradlew.bat build'
      - name: Install Wix Tools
        run: |
          choco install wixtoolset -y
      - name: Build Installer
        run: |
          cmd.exe /c 'gradlew.bat jpackage'
      - name: Upload Windows Installer
        uses: actions/upload-artifact@v2
        with:
          name: windows-installer
          path: Demo/build/jpackage/*.msi
  create-ubuntu-installer:
    name: Create Ubuntu Installer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: '14.0.2'
          java-package: jdk
          architecture: x64
      - name: Build Project with Gradle
        run: |
          chmod 775 ./gradlew
          ./gradlew build
      - name: Build Installer
        run: |
          ./gradlew jpackage
      - name: Upload Linux Deb File
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu-deb-file
          path: Demo/build/jpackage/*.deb
  create-release:
    name: Create Release with Installers
    runs-on: ubuntu-latest
    needs: create-windows-installer
    outputs:
      url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0
        release_name: Test Release
        draft: true
        prerelease: true
  upload-installers:
    name: Upload Instrallers
    needs: create-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        filename: [windows-installer, ubuntu-deb-file]
    steps:
      - name: Download uploaded artifact
        uses: actions/download-artifact@v2
      - name: Zip artifact
        run : |
          zip -r ${{ matrix.filename }}.zip ${{ matrix.filename }}/*
      - name: Upload to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.url }}
          asset_path: ./${{ matrix.filename }}.zip
          asset_name: ${{ matrix.filename }}.zip
          asset_content_type: application/zip
  delete-failed-release:
    name: Delete Release on Build Failure
    runs-on: ubuntu-latest
    needs: upload-installers
    if: failure()
    steps:
      - name: Delete Tag and Release
        uses: dev-drprasad/delete-tag-and-release@v0.1.2
        with:
          delete_release: true
          tag_name: v1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
